<template>
	<view class="content">
		<view class="prod-desc">
			<image class="img" :src="goodsInfo.goods_avatar" mode="aspectFit"></image>
			<view class="detail-introd">
				<view class="price">
					<text style="font-size: 25upx;color: #E45E47;margin-right: 10upx;">¥</text>
					<text style="font-size: 40upx;color: #E45E47;font-weight: bold;">{{ goodsInfo.goods_price}}</text>
				</view>
				<text class="stock">库存{{goodsInfo.goods_stock}}</text>
				<text class="detail-specification">已选 {{checked.specification}} {{checked.net_weight}}</text>
			</view>
			<uni-icon 
			  class="exit" 
			  type="closeempty" 
			  size="20" 
			  color="#DDDDDD"
			  @click="exit"></uni-icon>
		</view>
		<view class="net-weight">
			<text class="net-title">净含量</text>
			<view class="container">
				<template v-for="(item, index) in detail">
					<text 
					  class="net-val" 
					  :key="item.id" 
					  :class="{checked: checked.net_weight == item.net_weight}" 
					  @click="check(item, item.net_weight)">{{ item.net_weight }}</text>
				</template>
			</view>
		</view>
		<view class="specification">
			<text class="specification-title">规格</text>
			<view class="container">
				<template v-for="(item, index) in detail">
					<text 
					  class="specification-val"
					  :class="{checked: checked.specification == item.specification }"
					  :key="item.id" 
					  @click="check(item, item.specification)">{{item.specification}}</text>
				</template>
			</view>
		</view>
		<view class="purchase-quantity">
			<text class="purchase-title">购买数量</text>
			<uni-number-box 
			  class="purchase-val" 
			  :value="1" 
			  :min="1" 
			  :max="parseInt(goodsInfo.goods_stock)"  
			  @change="bindChange" ></uni-number-box>
		</view>
		<view class="btn-group">
			<button class="cart-btn" type="warn" @click="addTocart">
				<text style="color: #FFFFFF; font-size: 28upx;">加入购物车</text>
			</button>
		    <button class="direct-purchase" type="warn">
				<text style="color: #FFFFFF;font-size: 28upx;" @click="directPurchase">立即购买</text>
			</button>
		</view>
	</view>
</template>

<script>
	import uniIcon from '@/components/uni-icons/uni-icons.vue'
	import uniNumberBox from '@/components/uni-number-box/uni-number-box.vue'
	
	export default {
		components: {
			uniIcon,
			uniNumberBox
		},
		data() {
			return {
				goodsInfo : {},
				detail: [],
				checked: {},
				goods_num: 1
			}
		},
		beforeMount() {
			const subNvue = uni.getCurrentSubNVue()
			subNvue.onMessage(({ data }) => {
				this.goodsInfo = data.goodInfo.result
				console.log(this.goodsInfo)
				this.detail = data.goodInfo.detail
			})
		},
		methods: {
			// 购买商品数量
			bindChange(value) {
				this.goods_num = value
			},
			// 退出详细页面
			exit() {
				uni.$emit('isDetail', {
					isShowproduct: true,
					isShowdetail: false 
				})
			},
			// 加入购物车
			async addTocart() {
				if(!this.checked.net_weight || !this.checked.specification) {
					uni.showToast({
						title: "请选择好商品格式",
						icon: "none"
					})
					return
				}
				const data = this.packageData()
				const subNvue = uni.getCurrentSubNVue()
				subNvue.postMessage({
					"cartData": data
				})
			},
			//选择商品款式
			check(obj, value) {
				const key = Object.entries(obj).filter(item => item[1] === value).map(m => m[0])
				this.$set(this.checked, key, value)
			},
			// 直接购买
			directPurchase() {
				if(!this.checked.net_weight || !this.checked.specification) {
					uni.showToast({
						title: '请选择商品格式'
					})
					return
				}
				uni.showToast({
					title: '创建订单'
				})
				const data = {
					shop_id: this.goodsInfo.shop_id, 
					goods_id: this.goodsInfo.goods_id,
					...this.checked, 
					goods_num:this.goods_num
				}
				uni.navigateTo({
					url: '../order/createOrder?data='+JSON.stringify(data)
				})
			},
			/**
			 * 封装goodsData
			 * @return {Object} data
			 * */ 
			packageData() {
				const data = {
					goods_id: this.goodsInfo.goods_id,
					goods_price: this.goodsInfo.goods_price,
					goods_name: this.goodsInfo.goods_name,
					goods_stock: this.goodsInfo.goods_stock,
					goods_avatar: this.goodsInfo.goods_avatar,
					...this.checked,
					goods_num: this.goods_num	
				}
				return data
			}
		}
	}
</script>

<style>
.content {
	padding: 40upx 20upx;
	flex-direction: column;
}
.prod-desc {
	flex-direction: row;
}
.img {
	width: 250upx;
	height: 250upx;
	border-radius: 10upx;
}
.detail-introd {
	flex: 1;
	flex-direction: column;
	justify-content: center;
	padding: 50upx 40upx;
}
.price {
	flex-direction: row;
    align-items: center;
	flex: 1;
}
.stock { 
	color: #E5E5E5;
	font-size: 32upx;
	flex: 1;
}
.detail-specification {
	color: #000000;
	font-size: 25upx;
	flex: 1;
}
.exit {
	position: fixed;
	top: 30upx;
	right: 30upx;
}
.net-weight, .specification{
  height: 200upx;
  padding: 20upx 20upx;
  justify-content: center;
  border-bottom-width: 1upx;
  border-bottom-color: #EEEEEE;
}
.container {
	flex-direction: row;
	justify-content: flex-start;
	flex-wrap: wrap;
}
.net-title, .specification-title, .purchase-title{
	font-size: 30upx;
	margin-bottom: 20upx;
	
}
.net-val , .specification-val{
	height: 60upx;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	margin-right: 15upx;
	border-radius: 6px;
	background-color: #EEEEEE;
	padding: 12upx 30upx;
	font-size: 30upx;
	color: #000000;
	text-overflow: ellipsis;
}
.checked {
	color: #FFFFFF;
	background-color: #ed1c24;
}
.purchase-quantity {
	height: 150upx;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
	padding: 20upx 20upx;
    border-bottom-width: 1upx;
    border-bottom-color: #EEEEEE;
}
.purchase-val {
	transform: scale(0.9);
}
.btn-group {
	position: fixed;
	flex-direction: row;
	border-top-width: 1upx;
	border-top-color: #EEEEEE;
	padding: 20upx 20upx;
	align-items: center;
	bottom: 0;
	left: 0;
	right: 0;
	justify-content: center;
}
.cart-btn {
	width: 340upx;
	height: 90upx;
	border-top-left-radius: 50upx;
	border-bottom-left-radius: 50upx;
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
	background-color: #E45E47;
	color: #FFFFFF;
	border-width: 0;
}
.direct-purchase {
	width: 340upx;
	height: 90upx;
	border-top-right-radius: 50upx;
	border-bottom-right-radius: 50upx;
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
	background-color:#ed8b6a ;
	color: #FFFFFF;
	border-width: 0;
}
.btn-hover {
	background-color: #E45E47;
}
</style>
